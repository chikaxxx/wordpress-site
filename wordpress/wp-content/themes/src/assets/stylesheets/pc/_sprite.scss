// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$btn-nav-menu-name: 'btn_nav_menu';
$btn-nav-menu-x: 0px;
$btn-nav-menu-y: 0px;
$btn-nav-menu-offset-x: 0px;
$btn-nav-menu-offset-y: 0px;
$btn-nav-menu-width: 100px;
$btn-nav-menu-height: 100px;
$btn-nav-menu-total-width: 148px;
$btn-nav-menu-total-height: 100px;
$btn-nav-menu-image: '../images/pc/sprite.png';
$btn-nav-menu: (0px, 0px, 0px, 0px, 100px, 100px, 148px, 100px, '../images/pc/sprite.png', 'btn_nav_menu', );
$ico-footer-arrow-01-name: 'ico_footer_arrow_01';
$ico-footer-arrow-01-x: 120px;
$ico-footer-arrow-01-y: 0px;
$ico-footer-arrow-01-offset-x: -120px;
$ico-footer-arrow-01-offset-y: 0px;
$ico-footer-arrow-01-width: 28px;
$ico-footer-arrow-01-height: 28px;
$ico-footer-arrow-01-total-width: 148px;
$ico-footer-arrow-01-total-height: 100px;
$ico-footer-arrow-01-image: '../images/pc/sprite.png';
$ico-footer-arrow-01: (120px, 0px, -120px, 0px, 28px, 28px, 148px, 100px, '../images/pc/sprite.png', 'ico_footer_arrow_01', );
$spritesheet-width: 148px;
$spritesheet-height: 100px;
$spritesheet-image: '../images/pc/sprite.png';
$spritesheet-sprites: ($btn-nav-menu, $ico-footer-arrow-01, );
$spritesheet: (148px, 100px, '../images/pc/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
